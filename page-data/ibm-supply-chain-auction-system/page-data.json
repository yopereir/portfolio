{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-emilia-core-src-templates-project-query-tsx","path":"/ibm-supply-chain-auction-system","result":{"data":{"images":{"nodes":[{"name":"supply-chain","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/9c1bcaba6e4baf25e5d05dc1f093ac61/e2faf/supply-chain.jpg","srcSet":"/static/9c1bcaba6e4baf25e5d05dc1f093ac61/b74b6/supply-chain.jpg 256w,\n/static/9c1bcaba6e4baf25e5d05dc1f093ac61/daf87/supply-chain.jpg 512w,\n/static/9c1bcaba6e4baf25e5d05dc1f093ac61/e2faf/supply-chain.jpg 1024w","sizes":"(min-width: 1024px) 1024px, 100vw"},"sources":[{"srcSet":"/static/9c1bcaba6e4baf25e5d05dc1f093ac61/0fc77/supply-chain.webp 256w,\n/static/9c1bcaba6e4baf25e5d05dc1f093ac61/cc23f/supply-chain.webp 512w,\n/static/9c1bcaba6e4baf25e5d05dc1f093ac61/5e515/supply-chain.webp 1024w","type":"image/webp","sizes":"(min-width: 1024px) 1024px, 100vw"}]},"width":1600,"height":1600}}}]},"project":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"cover\": \"./supply-chain.jpg\",\n  \"date\": \"2019-09-12\",\n  \"title\": \"IBM Supply chain auction system\",\n  \"categories\": [\"Blockchain\"],\n  \"areas\": [\"SnapChat\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Developed an auction \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/yopereir/ibmcfc\"\n  }, \"Blockchain platform\"), \" using Hyperledger Fabric and IBM Cloud services to facilitate relief centers to obtain suppliers that bid the lowest for their services of delivering resources. We also implemented a machine learning model that used a regression algorithm to predict the quantity of resources that would be needed by the relief centers so they could make informed decisions when creating the auction. IBM Cloud's IOT service was used to simulate devices that sent testing data to the ML model.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Developed an auction  Blockchain platform  using Hyperledger Fabric and IBM Cloud services to facilitate relief centers to obtain suppliersâ€¦","date":"2019-09-12","slug":"/ibm-supply-chain-auction-system","title":"IBM Supply chain auction system","areas":["SnapChat"],"cover":{"childImageSharp":{"resize":{"src":"/static/9c1bcaba6e4baf25e5d05dc1f093ac61/a1eb1/supply-chain.jpg"}}}}},"pageContext":{"slug":"/ibm-supply-chain-auction-system","absolutePathRegex":"/^/home/runner/work/yopereir.github.io/yopereir.github.io/content/projects/ibm-call-for-code/","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["1181966677","1941067784","2744905544","468821756"]}