{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-emilia-core-src-templates-project-query-tsx","path":"/software-engineer-at-upstate-interactive","result":{"data":{"images":{"nodes":[{"name":"software-ui","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#082828","images":{"fallback":{"src":"/static/3b1242cd3ee250ca5efc6eddb16b7221/e2faf/software-ui.jpg","srcSet":"/static/3b1242cd3ee250ca5efc6eddb16b7221/b74b6/software-ui.jpg 256w,\n/static/3b1242cd3ee250ca5efc6eddb16b7221/daf87/software-ui.jpg 512w,\n/static/3b1242cd3ee250ca5efc6eddb16b7221/e2faf/software-ui.jpg 1024w","sizes":"(min-width: 1024px) 1024px, 100vw"},"sources":[{"srcSet":"/static/3b1242cd3ee250ca5efc6eddb16b7221/0fc77/software-ui.webp 256w,\n/static/3b1242cd3ee250ca5efc6eddb16b7221/cc23f/software-ui.webp 512w,\n/static/3b1242cd3ee250ca5efc6eddb16b7221/5e515/software-ui.webp 1024w","type":"image/webp","sizes":"(min-width: 1024px) 1024px, 100vw"}]},"width":1600,"height":1600}}}]},"project":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"cover\": \"./software-ui.jpg\",\n  \"date\": \"May 2019 - June 2020\",\n  \"title\": \"Software Engineer at Upstate Interactive\",\n  \"categories\": [\"Web Development\", \"DevOps\"],\n  \"areas\": [\"Software Engineer at Upstate Interactive\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Implemented an ETL workflow for collecting, modifying and storing credit card data in an AWS S3 Data Lake.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Developed a crash and error analytics system using REST API to capture and send event driven data.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Built a CI/CD workflow to aid in DevOps for testing and validation of the API using Gitlab. \")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Implemented an ETL workflow for collecting, modifying and storing credit card data in an AWS S3 Data Lake. Developed a crash and errorâ€¦","date":"May 2019 - June 2020","slug":"/software-engineer-at-upstate-interactive","title":"Software Engineer at Upstate Interactive","areas":["Software Engineer at Upstate Interactive"],"cover":{"childImageSharp":{"resize":{"src":"/static/3b1242cd3ee250ca5efc6eddb16b7221/a1eb1/software-ui.jpg"}}}}},"pageContext":{"slug":"/software-engineer-at-upstate-interactive","absolutePathRegex":"/^/home/runner/work/yopereir.github.io/yopereir.github.io/content/projects/software-engineer-at-upstate-interactive/","prev":{"slug":"/embedded-systems-developer","parent":{"fileAbsolutePath":"/home/runner/work/yopereir.github.io/yopereir.github.io/content/projects/embedded-systems-developer/index.mdx"},"title":"Embedded systems developer","categories":["DevOps"],"cover":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#180808","images":{"fallback":{"src":"/static/a5f848666a3aed9d59f23e0d22c32909/a227a/embedded.jpg","srcSet":"/static/a5f848666a3aed9d59f23e0d22c32909/fd09d/embedded.jpg 193w,\n/static/a5f848666a3aed9d59f23e0d22c32909/c4220/embedded.jpg 385w,\n/static/a5f848666a3aed9d59f23e0d22c32909/a227a/embedded.jpg 770w","sizes":"(min-width: 770px) 770px, 100vw"},"sources":[{"srcSet":"/static/a5f848666a3aed9d59f23e0d22c32909/16cbe/embedded.webp 193w,\n/static/a5f848666a3aed9d59f23e0d22c32909/39b38/embedded.webp 385w,\n/static/a5f848666a3aed9d59f23e0d22c32909/1e281/embedded.webp 770w","type":"image/webp","sizes":"(min-width: 770px) 770px, 100vw"}]},"width":770,"height":433}}},"defer":false},"next":{"slug":"/event-driven-authoring-for-linting-and-committing","parent":{"fileAbsolutePath":"/home/runner/work/yopereir.github.io/yopereir.github.io/content/projects/event-driven-authoring-for-linting-and-committing/index.mdx"},"title":"Event-driven authoring for linting and committing","categories":["DevOps","Blockchain"],"cover":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#283838","images":{"fallback":{"src":"/static/32629930bf16f48cdf4eea36ac581885/a227a/linting.jpg","srcSet":"/static/32629930bf16f48cdf4eea36ac581885/fd09d/linting.jpg 193w,\n/static/32629930bf16f48cdf4eea36ac581885/c4220/linting.jpg 385w,\n/static/32629930bf16f48cdf4eea36ac581885/a227a/linting.jpg 770w","sizes":"(min-width: 770px) 770px, 100vw"},"sources":[{"srcSet":"/static/32629930bf16f48cdf4eea36ac581885/16cbe/linting.webp 193w,\n/static/32629930bf16f48cdf4eea36ac581885/39b38/linting.webp 385w,\n/static/32629930bf16f48cdf4eea36ac581885/1e281/linting.webp 770w","type":"image/webp","sizes":"(min-width: 770px) 770px, 100vw"}]},"width":770,"height":433}}},"defer":false},"formatString":"DD.MM.YYYY"}},"staticQueryHashes":["1181966677","1941067784","2744905544","468821756"]}