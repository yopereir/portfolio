{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-emilia-core-src-templates-projects-query-tsx-9e757cfe772df85a9bc0.js","mappings":"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","sources":["webpack://Yohann Pereira/./src/components/projects.tsx","webpack://Yohann Pereira/./node_modules/@lekoarts/gatsby-theme-emilia-core/src/templates/projects-query.tsx","webpack://Yohann Pereira/./src/@lekoarts/gatsby-theme-emilia-core/components/projects.tsx","webpack://Yohann Pereira/./src/assets/location.tsx","webpack://Yohann Pereira/./src/components/links-list.tsx","webpack://Yohann Pereira/./src/components/header.tsx"],"sourcesContent":["/** @jsx jsx */\n/* eslint no-shadow: 0 */\nimport { jsx, Container, Heading, Themed, Box } from \"theme-ui\"\nimport { useSpring, animated, config } from \"react-spring\"\nimport { rgba } from \"polished\"\nimport { IGatsbyImageData } from \"gatsby-plugin-image\"\nimport Layout from \"./layout\"\nimport Header from \"./header\"\nimport Card from \"./card\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype Props = {\n  projects: {\n    slug: string\n    title: string\n    categories?: string[]\n    importance?: number\n    date: string\n    cover: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n    }\n  }[],\n  categoriesToShow?: string[]\n}\n\nfunction getProjectsInCategory(category, projects){\n  let projectsInCategory = []\n  projects.forEach(project => {\n    if(project.categories !== null && project.categories.includes(category)) projectsInCategory.push(project);\n  });\n  return projectsInCategory;\n}\n\nconst Projects = ({ projects }: Props) => {\n  const { categoriesToShow } = useSiteMetadata()\n  const fadeUpProps = useSpring({\n    config: config.slow,\n    delay: 600,\n    from: { opacity: 0, transform: `translate3d(0, 30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n\n  if (projects.length === 0) {\n    return (\n      <Layout>\n        <Header />\n        <Container>\n          <Themed.p>\n            Hi!{` `}\n            <span role=\"img\" aria-label=\"Wave emoji\">\n              ðŸ‘‹\n            </span>\n            {` `}\n            <br />\n            Thanks for using <b>@lekoarts/gatsby-theme-emilia</b>. You currently don't have any content in your{` `}\n            <i>projects</i> folder - that's why this page displays a placeholder text. Head over to the{` `}\n            <Themed.a href=\"https://github.com/LekoArts/gatsby-themes/tree/main/themes/gatsby-theme-emilia\">\n              README\n            </Themed.a>\n            {` `}\n            to learn how to setup them.\n          </Themed.p>\n          <Themed.p>\n            <b>TL;DR:</b> <br />\n            The starter automatically created the folder <code>content/projects</code>. Go into this folder, create a\n            new folder called <code>example</code> and create an <code>index.mdx</code> file there and place an image.\n            Edit the frontmatter like described in the{` `}\n            <Themed.a href=\"https://github.com/LekoArts/gatsby-themes/tree/main/themes/gatsby-theme-emilia\">\n              README\n            </Themed.a>\n            .\n          </Themed.p>\n        </Container>\n      </Layout>\n    )\n  }\n\n  projects = projects.sort((a,b)=>{\n    const regexMatchA = a.date.match(/\\w+/g) // a.date.match(/([\\d]{2})-([\\d]{2})-([\\d]{4}|[\\d]{2})/g)\n    const regexMatchB = b.date.match(/\\w+/g)\n    console.log(a.importance,b.importance);\n    if(((a.importance == null)?0:parseInt(\"\"+a.importance)) > ((b.importance == null)?0:parseInt(\"\"+b.importance))) return -1;\n    else if(((a.importance == null)?0:parseInt(\"\"+a.importance)) < ((b.importance == null)?0:parseInt(\"\"+b.importance))) return 1;\n\n    if(regexMatchA == null && regexMatchB == null) return 0;\n    if(regexMatchA == null) return 1;\n    if(regexMatchB == null) return -1;\n    if(regexMatchB[regexMatchB.length-1] == 'Present') return 1;\n    if(regexMatchA[regexMatchA.length-1] == 'Present') return -1;\n    \n    if(new Date(regexMatchA[regexMatchA.length-2]+\", \"+regexMatchA[regexMatchA.length-1]) > new Date(regexMatchB[regexMatchB.length-2]+\", \"+regexMatchB[regexMatchB.length-1])) return -1;\n    else return 1;\n\n  });\n  let projectsToDisplay = projects.map((project, index) => {\n    const val = project.cover.childImageSharp.gatsbyImageData.backgroundColor as string\n    const shadow = rgba(val, 0.15)\n\n    const px = [`64px`, `32px`, `16px`, `8px`, `4px`]\n    const shadowArray = px.map((v) => `${shadow} 0px ${v} ${v} 0px`)\n\n    return <Card key={project.slug} eager={index === 0} item={project} overlay={val} shadow={shadowArray} />\n  })\n  return (\n    <Layout>\n      <Header />\n      <Box as=\"main\" variant=\"layout.main\">\n        <animated.div style={fadeUpProps}>\n          {(categoriesToShow.length === 0 || categoriesToShow.includes(\"All\"))\n          ?\n          <Container\n            sx={{\n              mt: `-8rem`,\n              display: `grid`,\n              gridTemplateColumns: [`1fr`, `repeat(auto-fill, minmax(350px, 1fr))`],\n              gridGap: 4,\n              alignItems: `flex-start`,\n            }}\n          >\n            {projectsToDisplay}\n          </Container>\n          :\n          categoriesToShow.map((category)=>{\n            return <div>\n              {(categoriesToShow.length !== 1)?\n            <Heading id={category} style={{marginLeft: \"2rem\", minHeight: \"10rem\"}} as=\"h2\" variant=\"styles.h2\">\n              {category}\n            </Heading>:\"\"}\n            <Container\n              sx={{\n                mt: `-8rem`,\n                display: `grid`,\n                gridTemplateColumns: [`1fr`, `repeat(auto-fill, minmax(350px, 1fr))`],\n                gridGap: 4,\n                alignItems: `flex-start`,\n              }}>\n              {getProjectsInCategory(category, projects).map((project, index) => {\n                const val = project.cover.childImageSharp.gatsbyImageData.backgroundColor as string\n                const shadow = rgba(val, 0.15)\n\n                const px = [`64px`, `32px`, `16px`, `8px`, `4px`]\n                const shadowArray = px.map((v) => `${shadow} 0px ${v} ${v} 0px`)\n\n                return <Card key={project.slug} eager={index === 0} item={project} overlay={val} shadow={shadowArray} />\n              })}\n            </Container>\n            </div>\n          })\n          }\n        </animated.div>\n      </Box>\n    </Layout>\n  )\n}\n\nexport default Projects\n","import { graphql } from \"gatsby\"\nimport ProjectsComponent from \"../components/projects\"\n\nexport default ProjectsComponent\n\nexport const query = graphql`\n  query {\n    allProject(sort: { fields: date, order: DESC }) {\n      nodes {\n        slug\n        title\n        categories\n        date\n        importance\n        cover {\n          childImageSharp {\n            gatsbyImageData(width: 770, quality: 90)\n          }\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Projects from \"../../../components/projects\"\n\ntype Props = {\n  data: {\n    allProject: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function EmiliaCoreProjects({ ...props }: Props) {\n  const {\n    data: { allProject },\n  } = props\n\n  return <Projects projects={allProject.nodes} {...props} />\n}\n","import * as React from \"react\"\n\nconst Location = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className=\"icon-location-pin\">\n    <path\n      className=\"primary\"\n      fill=\"currentColor\"\n      d=\"M5.64 16.36a9 9 0 1 1 12.72 0l-5.65 5.66a1 1 0 0 1-1.42 0l-5.65-5.66zM12 13a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"\n    />\n    <path\n      className=\"secondary\"\n      fill=\"currentColor\"\n      d=\"M12 1a9 9 0 0 1 6.36 15.36l-5.65 5.66a1 1 0 0 1-.71.3V13a3 3 0 0 0 0-6V1z\"\n    />\n  </svg>\n)\n\nexport default Location\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Themed } from \"theme-ui\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\ntype MyStaticQuery = {\n  site: {\n    siteMetadata: {\n      categoriesToShow?: string[]\n    }\n  }\n}\n\nconst LinksList = () => {\n  const query = useStaticQuery<MyStaticQuery>(graphql`\n  query {\n    site {\n      siteMetadata {\n        categoriesToShow\n      }\n    }\n  }\n  `)\n\n  return (\n    <React.Fragment>\n      {\n        (query.site.siteMetadata.categoriesToShow.length > 1 && !query.site.siteMetadata.categoriesToShow.includes(\"All\"))?\n        query.site.siteMetadata.categoriesToShow.map((category) => (\n          <Themed.a key={category} href={\"#\"+category}>\n            {category}\n          </Themed.a>\n        )):\"\"\n      }\n      <Themed.a key=\"about-me\" href=\"aboutme\">\n        About Me\n      </Themed.a>\n      <Themed.a key=\"contact\" href=\"contact\">\n        Contact\n      </Themed.a>\n    </React.Fragment>\n  )\n}\n\nexport default LinksList\n","/** @jsx jsx */\nimport { jsx, Heading, Flex, useColorMode } from \"theme-ui\"\nimport { animated, useSpring, config } from \"react-spring\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport useEmiliaConfig from \"../hooks/use-emilia-config\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\nimport HeaderBackground from \"./header-background\"\nimport Location from \"../assets/location\"\nimport SocialMediaList from \"./social-media-list\"\nimport LinksList from \"./links-list\"\nimport ColorModeToggle from \"./colormode-toggle\"\n\ntype AvatarStaticQuery = {\n  file: {\n    childImageSharp: {\n      gatsbyImageData: IGatsbyImageData\n    }\n  }\n}\n\nconst Header = () => {\n  const { name, location, assetsPath } = useEmiliaConfig()\n  const { oneLineDescription, categoriesToShow } = useSiteMetadata()\n  const [colorMode, setColorMode] = useColorMode()\n  const isDark = colorMode === `dark`\n  const toggleColorMode = (e: React.SyntheticEvent) => {\n    e.preventDefault()\n    setColorMode(isDark ? `light` : `dark`)\n  }\n  const avatar = useStaticQuery<AvatarStaticQuery>(graphql`\n    query {\n      file(name: { eq: \"avatar\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: FIXED, width: 140, height: 140, quality: 100)\n        }\n      }\n    }\n  `)\n\n  const fadeUpProps = useSpring({\n    config: config.slow,\n    from: { opacity: 0, transform: `translate3d(0, 30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n  const fadeUpPropsDelay = useSpring({\n    config: config.slow,\n    delay: 250,\n    from: { opacity: 0, transform: `translate3d(0, 30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n  const fadeProps = useSpring({ config: config.slow, from: { opacity: 0 }, to: { opacity: 1 } })\n  const fadeLongProps = useSpring({ config: config.slow, delay: 600, from: { opacity: 0 }, to: { opacity: 1 } })\n\n  return (\n    <Flex as=\"header\" variant=\"layout.projectHead\">\n      <HeaderBackground />\n      <div sx={{ textAlign: `center`, my: 5, zIndex: 10 }}>\n        <div style={{ top: \"1rem\", right: \"1rem\", position: \"absolute\", \"textAlign\": `right`}}><ColorModeToggle isDark={isDark} toggle={toggleColorMode} /></div>\n        <animated.div style={fadeProps}>\n          <div\n            sx={{\n              overflow: `hidden`,\n              borderRadius: `full`,\n              height: [`100px`, `140px`],\n              width: [`100px`, `140px`],\n              display: `inline-block`,\n              boxShadow: `lg`,\n              \"> div:not([data-placeholder='true'])\": {\n                height: [`100px !important`, `140px !important`],\n                width: [`100px !important`, `140px !important`],\n              },\n            }}\n          >\n            {avatar?.file?.childImageSharp?.gatsbyImageData ? (\n              <GatsbyImage image={avatar.file.childImageSharp.gatsbyImageData} alt=\"Avatar\" />\n            ) : (\n              <div\n                sx={{\n                  fontSize: 0,\n                  position: `absolute`,\n                  top: 0,\n                  left: 0,\n                  width: `100% !important`,\n                  right: 0,\n                  p: 3,\n                  backgroundColor: `red.2`,\n                }}\n                data-placeholder=\"true\"\n              >\n                Place an image with the name \"avatar\" inside the directory \"{assetsPath}\"\n              </div>\n            )}\n          </div>\n        </animated.div>\n        <animated.div style={fadeUpProps}>\n          <Heading as=\"h1\" variant=\"styles.h1\">\n            {name}\n          </Heading>\n        </animated.div>\n        <animated.div style={fadeUpPropsDelay}>\n          <Flex\n            sx={{\n              svg: {\n                width: `20px`,\n                height: `20px`,\n                \".primary\": { color: `iconPrimary` },\n                \".secondary\": { color: `iconSecondary` },\n                mr: 2,\n              },\n              justifyContent: `center`,\n              alignItems: `center`,\n              color: `text`,\n            }}\n          >\n            {location == \"\"?\"\":<Location />} {location}\n          </Flex>\n        </animated.div>\n        <div data-testid=\"social-header\" sx={{ mt: 4, mb: 6, a: { mx: 2 } }}>\n          <div style={{textAlign:\"center\", maxWidth:\"80vw\"}}>{oneLineDescription}</div>\n          <animated.div style={fadeLongProps}>\n            <LinksList />\n            <SocialMediaList />\n          </animated.div>\n          <br/>\n          {categoriesToShow.length == 1?<a href={\"resumes/Resume_\"+categoriesToShow[0].replace(\" \",\"-\")+\".docx\"} target=\"_blank\"><button value=\"Send Email\" style={{\"maxWidth\":\"25vw\"}} className=\"btn-lrg submit-btn\">Download CV</button></a>:\"\"}\n        </div>\n      </div>\n    </Flex>\n  )\n}\n\nexport default Header\n"],"names":["projects","categoriesToShow","useSiteMetadata","fadeUpProps","useSpring","config","delay","from","opacity","transform","to","length","jsx","Layout","Header","Container","Themed","role","href","projectsToDisplay","sort","a","b","regexMatchA","date","match","regexMatchB","console","log","importance","parseInt","Date","map","project","index","val","cover","childImageSharp","gatsbyImageData","backgroundColor","shadow","rgba","shadowArray","v","Card","key","slug","eager","item","overlay","Box","as","variant","animated","style","includes","sx","mt","display","gridTemplateColumns","gridGap","alignItems","category","Heading","id","marginLeft","minHeight","projectsInCategory","forEach","categories","push","getProjectsInCategory","props","allProject","data","React","Projects","nodes","xmlns","viewBox","className","fill","d","query","useStaticQuery","site","siteMetadata","useEmiliaConfig","name","location","assetsPath","oneLineDescription","useColorMode","colorMode","setColorMode","isDark","avatar","fadeUpPropsDelay","fadeProps","fadeLongProps","Flex","HeaderBackground","textAlign","my","zIndex","top","right","position","ColorModeToggle","toggle","e","preventDefault","overflow","borderRadius","height","width","boxShadow","file","GatsbyImage","image","alt","fontSize","left","p","svg","color","mr","justifyContent","Location","mb","mx","maxWidth","LinksList","SocialMediaList","replace","target","value"],"sourceRoot":""}